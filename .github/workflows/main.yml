name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adoptopenjdk' 

    - name: Set up Maven
      uses: actions/setup-java@v2
      with:
        maven-version: '3.8.1'
        
    - name: Compile project
      run: mvn clean compile

    - name: Run unit tests
      run: mvn test

    - name: SonarQube Analysis
      env:
        SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      run: |
        curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner-cli.zip
        ./sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
          -Dsonar.projectName=Petclinic \
          -Dsonar.projectKey=Petclinic \
          -Dsonar.java.binaries=. \
          -Dsonar.host.url=http://4.247.31.109:9000/
    - name: Wait for Quality Gate to be ready
      run: |
        echo "Waiting for SonarQube Quality Gate result..."
        sleep 15 # Wait for 15 seconds for the analysis to complete

    - name: Check SonarQube Quality Gate status
      run: |
        RESULT=$(curl -s -u ${{ secrets.SONARQUBE_TOKEN }} "http://4.247.31.109:9000//api/qualitygates/project_status?projectKey=Petclinic" | jq -r '.projectStatus.status')
        echo "Quality Gate status: $RESULT"
        if [ "$RESULT" != "OK" ]; then
          echo "Quality Gate failed!"
          exit 1
        else
          echo "Quality Gate passed!"
          fi
